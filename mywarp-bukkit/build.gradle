/*
 * Copyright (C) 2011 - 2020, MyWarp team and contributors
 *
 * This file is part of MyWarp.
 *
 * MyWarp is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * MyWarp is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with MyWarp. If not, see <http://www.gnu.org/licenses/>.
 */

import ru.vyarus.gradle.plugin.animalsniffer.signature.BuildSignatureTask

plugins {
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "ru.vyarus.animalsniffer" version "1.5.1"
}

configurations.create("createSignature")

repositories {
    maven { url 'https://raw.github.com/mywarp/repo/master/releases' }
    maven { url 'https://raw.github.com/mywarp/repo/master/snapshots' }
    maven { url "https://hub.spigotmc.org/nexus/content/groups/public/" } //Bukkit API
    maven { url "https://maven.sk89q.com/repo/" } //SquirrelID
    maven { url "https://raw.github.com/rjenkinsjr/maven2/repo" } //SLF4Bukkit
    maven { url "https://repo.mikeprimm.com" } //DynmapAPI
}

dependencies {
    implementation project(":mywarp-core")
    implementation "org.spigotmc:spigot-api:1.16.4-R0.1-SNAPSHOT"
    implementation "com.sk89q:squirrelid:0.2.0"
    implementation "net.milkbowl.vault:VaultAPI:1.7"
    implementation "org.anjocaido:essentialsgroupmanager:2.10.1"
    implementation "de.bananaco:bpermissions:2.10.5"
    implementation "us.dynmap:DynmapCoreAPI:1.9.4"

    runtimeOnly "info.ronjenkins:slf4bukkit:1.0.0"
    runtimeOnly "com.h2database:h2:1.4.200"

    implementation "org.codehaus.mojo:animal-sniffer-annotations:1.19"
    signature "org.codehaus.mojo.signature:java18:1.0@signature" //required to build custom signature
    createSignature "org.bukkit:bukkit:1.7.10-R0.1-SNAPSHOT" //try to stay compatible with the last 'official' version
    createSignature "com.google.guava:guava:10.0.1" //bundled by Bukkit 1.7.10, we should try to stay compatible
}

task sig(type: BuildSignatureTask) {
    //build new signature as an extension to the JDK's
    signatures configurations.signature
    files configurations.createSignature
}

animalsniffer {
    //use the signature generated above
    signatures = sig.outputFiles
    excludeJars "bukkit-*"
    excludeJars "guava-*"

    //the cache cannot be used due to incompatibilities with Java 8,
    //see https://github.com/xvik/gradle-animalsniffer-plugin/wiki/Check-task-performance#known-issues
}

processResources {
    filesMatching("**/plugin.yml") {
        expand(projectName: project.projectName,
                version: project.internalVersion,
                projectDescription: project.projectDescription,
                url: project.url
        )
    }
}

shadowJar {
    def internalPath = "io.github.mywarp.mywarp.internal"

    // exclude various text files from libraries
    exclude "**/META-INF/LICENSE*"
    exclude "**/META-INF/DEPENDENCIES*"
    exclude "**/META-INF/NOTICE*"
    exclude "**/META-INF/README.txt"

    dependencies {
        include(dependency(":mywarp-core"))
        include(dependency("org.jooq:jooq"))
        include(dependency("org.reactivestreams:reactive-streams")) //used by JOOQ
        include(dependency("org.flywaydb:flyway-core"))
        include(dependency("org.slf4j:slf4j-api"))
        include(dependency("info.ronjenkins:slf4bukkit"))
        include(dependency("com.sk89q:squirrelid"))
        include(dependency("com.github.mywarp.intake:intake"))
        include(dependency("com.h2database:h2"))
        include(dependency("com.flowpowered:flow-math"))
    }
    relocate("org.jooq", "${internalPath}.jooq")
    relocate("org.reactivestreams", "${internalPath}.reactivestreams")
    relocate("org.flywaydb", "${internalPath}.flyway")
    relocate("org.h2", "${internalPath}.h2")
    relocate("com.flowpowered", "${internalPath}.flow-math")
    relocate("org.slf4j", "${internalPath}.slf4j")
    relocate("info.ronjenkins", "${internalPath}.slf4bukkit")
    relocate("com.sk89q.intake", "${internalPath}.intake")
    relocate("com.sk89q.squirrelid", "${internalPath}.squirrelid")

    //exclude unused classes
    minimize {
        exclude(dependency("com.h2database:h2:.*"))
    }
}
build.finalizedBy(shadowJar)

